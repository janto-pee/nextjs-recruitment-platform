
stages:
  - build
  - package
  - test
  - deploy

variables:
  APP_VERSION=$CI_PIPELINE_IID

build website:
  images: node:16-alpine
  stages: build
  script:
    - yarn install
    - yarn lint
    - yarn test
    - yarn build
    - echo $APP_VERSION > build/version.html   #adding version to each build
  artifacts:
    paths:
      - build

build docker image:
  stage: package
  image: docker:20.10.12
  services:
    - docker: 20.10.12-dind
  script:
    # - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build -t $CI_REGISTRY_IMAGE -t $CI_REGISTRY_IMAGE:$APP_VERSION .
    - docker image ls
    - docker push --all-tags $CI_REGISTRY_IMAGE

test docker image:
  image: curlimage/curl
  stage: test
  services:
    - name: $CI_REGISTRY_IMAGE:$APP_VERSION
      alias: website
  script:
     - curl http://website/version.html | grep $APP_VERSION

deployto production:
  stage: deploy
  images: 
    name: amazon/aws-cli:2.4.2
    entrypoint: [""]
  environment: production

  # we need to provide some file to s3 as temmplates