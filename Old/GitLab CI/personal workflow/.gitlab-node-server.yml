stages:
  - build
  - test
  - package
  - test package
  - deploy staging
  - deploy production

variables:
  APP_VERSION=$CI_PIPELINE_IID

build website:
  images: node:16-alpine
  stages: build
  script:
    - yarn install
    - yarn lint
    - yarn test
    - yarn build
    - echo $APP_VERSION > build/version.html   #adding version to each build
  artifacts:
    paths:
      - build

test website:
  images: node:16-alpine
  stages: test
  scripts:
    - yarn global add serve
    - apk add curl
    - serve -s build &
    - sleep 10
    - curl http://localhost:3000 | grep "React App"     #grep download the page source

build docker image:
  stage: package
  image: docker:20.10.12
  services:
    - docker: 20.10.12-dind
  script:
    # - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build -t $CI_REGISTRY_IMAGE -t $CI_REGISTRY_IMAGE:$APP_VERSION .
    - docker image ls
    - docker push --all-tags $CI_REGISTRY_IMAGE

test docker image:
  image: curlimage/curl
  stage: test package
  services:
    - name: $CI_REGISTRY_IMAGE:$APP_VERSION
      alias: website
  script:
     - curl http://website/version.html | grep $APP_VERSION


  deploy to production:
    images: 
      name: amazon/aws-cli:2.4.2
      entrypoint: [""]
    stage: deploy staging
    variables:
      APP_NAME: My Website
      APP_ENV_NAME: Mywebsite-env
    environment: production
    scripts:
      - --aws version
      - yum install -y gettext
      - export DEPLOY_TOKEN=$(echo GITLAB_DEPLOY_TOKEN "tr -d "/n" | base64)
      - envsubst < templates/Dockerrun.aws.json > Dockerrun.aws.json
      - envsubst < templates/auth.json > auth.json
      - cat Dockerrun.aws.json
      - cat auth.json
      - aws s3 cp Dockerrun.aws.json s3://$AWS_S3_BUCKET/Dockerrun.aws.json
      - aws s3 cp auth.json s3://$AWS_S3_BUCKET/auth.json
      - aws elasticbeanstalk create-application-version --aplication/name "$APP_NAME" --version $APP_VERSION...
      - aws elasticbeanstalk update-environment --application-name...
      - curl $CI_ENVIRONMENT_URL/version.html | grep $APP_VERSION