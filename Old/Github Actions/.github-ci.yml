# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

#   - name: Cache node modules
#     id: cache-npm
#     uses: actions/cache@v3
#     env:
#           cache-name: cache-node-modules
#         with:
#           # npm cache files are stored in `~/.npm` on Linux/macOS
#           path: ~/.npm
#           key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-build-${{ env.cache-name }}-
#             ${{ runner.os }}-build-
#             ${{ runner.os }}-

#       - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
#         name: List the state of node modules
#         continue-on-error: true
#         run: npm list

    - name: Setup Node.js environment
      uses: actions/setup-node@v4.0.2
      with:
        # Set always-auth in npmrc.
        always-auth: # optional, default is false
        # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
        node-version: # optional
        # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
        node-version-file: # optional
        # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
        architecture: # optional
        # Set this option if you want the action to check for the latest available version that satisfies the version spec.
        check-latest: # optional
        # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
        registry-url: # optional
        # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
        scope: # optional
        # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
        token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
        # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
        cache: # optional
        # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
        cache-dependency-path: # optional


    - name: Close Stale Issues
      uses: actions/stale@v9.0.0
      with:
        # Token for the repository. Can be passed in using `{{ secrets.GITHUB_TOKEN }}`.
        repo-token: # optional, default is ${{ github.token }}
        # The message to post on the issue when tagging it. If none provided, will not mark issues stale.
        stale-issue-message: # optional
        # The message to post on the pull request when tagging it. If none provided, will not mark pull requests stale.
        stale-pr-message: # optional
        # The message to post on the issue when closing it. If none provided, will not comment when closing an issue.
        close-issue-message: # optional
        # The message to post on the pull request when closing it. If none provided, will not comment when closing a pull requests.
        close-pr-message: # optional
        # The number of days old an issue or a pull request can be before marking it stale. Set to -1 to never mark issues or pull requests as stale automatically.
        days-before-stale: # optional, default is 60
        # The number of days old an issue can be before marking it stale. Set to -1 to never mark issues as stale automatically. Override "days-before-stale" option regarding only the issues.
        days-before-issue-stale: # optional
        # The number of days old a pull request can be before marking it stale. Set to -1 to never mark pull requests as stale automatically. Override "days-before-stale" option regarding only the pull requests.
        days-before-pr-stale: # optional
        # The number of days to wait to close an issue or a pull request after it being marked stale. Set to -1 to never close stale issues or pull requests.
        days-before-close: # optional, default is 7
        # The number of days to wait to close an issue after it being marked stale. Set to -1 to never close stale issues. Override "days-before-close" option regarding only the issues.
        days-before-issue-close: # optional
        # The number of days to wait to close a pull request after it being marked stale. Set to -1 to never close stale pull requests. Override "days-before-close" option regarding only the pull requests.
        days-before-pr-close: # optional
        # The label to apply when an issue is stale.
        stale-issue-label: # optional, default is Stale
        # The label to apply when an issue is closed.
        close-issue-label: # optional
        # The labels that mean an issue is exempt from being marked stale. Separate multiple labels with commas (eg. "label1,label2").
        exempt-issue-labels: # optional, default is 
        # The reason to use when closing an issue.
        close-issue-reason: # optional, default is not_planned
        # The label to apply when a pull request is stale.
        stale-pr-label: # optional, default is Stale
        # The label to apply when a pull request is closed.
        close-pr-label: # optional
        # The labels that mean a pull request is exempt from being marked as stale. Separate multiple labels with commas (eg. "label1,label2").
        exempt-pr-labels: # optional, default is 
        # The milestones that mean an issue or a pull request is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2").
        exempt-milestones: # optional, default is 
        # The milestones that mean an issue is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2"). Override "exempt-milestones" option regarding only the issues.
        exempt-issue-milestones: # optional, default is 
        # The milestones that mean a pull request is exempt from being marked as stale. Separate multiple milestones with commas (eg. "milestone1,milestone2"). Override "exempt-milestones" option regarding only the pull requests.
        exempt-pr-milestones: # optional, default is 
        # Exempt all issues and pull requests with milestones from being marked as stale. Default to false.
        exempt-all-milestones: # optional, default is false
        # Exempt all issues with milestones from being marked as stale. Override "exempt-all-milestones" option regarding only the issues.
        exempt-all-issue-milestones: # optional, default is 
        # Exempt all pull requests with milestones from being marked as stale. Override "exempt-all-milestones" option regarding only the pull requests.
        exempt-all-pr-milestones: # optional, default is 
        # Only issues or pull requests with all of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels.
        only-labels: # optional, default is 
        # Only issues or pull requests with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels.
        any-of-labels: # optional, default is 
        # Only issues with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels. Override "any-of-labels" option regarding only the issues.
        any-of-issue-labels: # optional, default is 
        # Only pull requests with at least one of these labels are checked if stale. Defaults to `` (disabled) and can be a comma-separated list of labels. Override "any-of-labels" option regarding only the pull requests.
        any-of-pr-labels: # optional, default is 
        # Only issues with all of these labels are checked if stale. Defaults to `[]` (disabled) and can be a comma-separated list of labels. Override "only-labels" option regarding only the issues.
        only-issue-labels: # optional, default is 
        # Only pull requests with all of these labels are checked if stale. Defaults to `[]` (disabled) and can be a comma-separated list of labels. Override "only-labels" option regarding only the pull requests.
        only-pr-labels: # optional, default is 
        # The maximum number of operations per run, used to control rate limiting (GitHub API CRUD related).
        operations-per-run: # optional, default is 30
        # Remove stale labels from issues and pull requests when they are updated or commented on.
        remove-stale-when-updated: # optional, default is true
        # Remove stale labels from issues when they are updated or commented on. Override "remove-stale-when-updated" option regarding only the issues.
        remove-issue-stale-when-updated: # optional, default is 
        # Remove stale labels from pull requests when they are updated or commented on. Override "remove-stale-when-updated" option regarding only the pull requests.
        remove-pr-stale-when-updated: # optional, default is 
        # Run the processor in debug mode without actually performing any operations on live issues.
        debug-only: # optional, default is false
        # The order to get issues or pull requests. Defaults to false, which is descending.
        ascending: # optional, default is false
        # Delete the git branch after closing a stale pull request.
        delete-branch: # optional, default is false
        # The date used to skip the stale action on issue/pull request created before it (ISO 8601 or RFC 2822).
        start-date: # optional, default is 
        # The assignees which exempt an issue or a pull request from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2").
        exempt-assignees: # optional, default is 
        # The assignees which exempt an issue from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2"). Override "exempt-assignees" option regarding only the issues.
        exempt-issue-assignees: # optional, default is 
        # The assignees which exempt a pull request from being marked as stale. Separate multiple assignees with commas (eg. "user1,user2"). Override "exempt-assignees" option regarding only the pull requests.
        exempt-pr-assignees: # optional, default is 
        # Exempt all issues and pull requests with assignees from being marked as stale. Default to false.
        exempt-all-assignees: # optional, default is false
        # Exempt all issues with assignees from being marked as stale. Override "exempt-all-assignees" option regarding only the issues.
        exempt-all-issue-assignees: # optional, default is 
        # Exempt all pull requests with assignees from being marked as stale. Override "exempt-all-assignees" option regarding only the pull requests.
        exempt-all-pr-assignees: # optional, default is 
        # Exempt draft pull requests from being marked as stale. Default to false.
        exempt-draft-pr: # optional, default is false
        # Display some statistics at the end regarding the stale workflow (only when the logs are enabled).
        enable-statistics: # optional, default is true
        # A comma delimited list of labels to add when an issue or pull request becomes unstale.
        labels-to-add-when-unstale: # optional, default is 
        # A comma delimited list of labels to remove when an issue or pull request becomes stale.
        labels-to-remove-when-stale: # optional, default is 
        # A comma delimited list of labels to remove when an issue or pull request becomes unstale.
        labels-to-remove-when-unstale: # optional, default is 
        # Any update (update/comment) can reset the stale idle time on the issues and pull requests.
        ignore-updates: # optional, default is false
        # Any update (update/comment) can reset the stale idle time on the issues. Override "ignore-updates" option regarding only the issues.
        ignore-issue-updates: # optional, default is 
        # Any update (update/comment) can reset the stale idle time on the pull requests. Override "ignore-updates" option regarding only the pull requests.
        ignore-pr-updates: # optional, default is 
        # Only the issues or the pull requests with an assignee will be marked as stale automatically.
        include-only-assigned: # optional, default is false



  - name: Upload a Build Artifact
    uses: actions/upload-artifact@v4.3.1
    with:
      # Artifact name
      name: # optional, default is artifact
      # A file, directory or wildcard pattern that describes what to upload
      path: 
      # The desired behavior if no files are found using the provided path.
      Available Options:
        warn: Output a warning but do not fail the action
        error: Fail the action with an error message
        ignore: Do not output any warnings or errors, the action does not fail

          if-no-files-found: # optional, default is warn
          # Duration after which artifact will expire in days. 0 means using default retention.
          # Minimum 1 day. Maximum 90 days unless changed from the repository settings page.

          retention-days: # optional
          # The level of compression for Zlib to be applied to the artifact archive. The value can range from 0 to 9: - 0: No compression - 1: Best speed - 6: Default compression (same as GNU Gzip) - 9: Best compression Higher levels will result in better compression, but will take longer to complete. For large files that are not easily compressed, a value of 0 is recommended for significantly faster uploads.

          compression-level: # optional, default is 6
          # If true, an artifact with a matching name will be deleted before a new one is uploaded. If false, the action will fail if an artifact for the given name already exists. Does not fail if the artifact does not exist.

          overwrite: # optional, default is false


  - name: Download a Build Artifact
    uses: actions/download-artifact@v4.1.4
    with:
      # Name of the artifact to download. If unspecified, all artifacts for the run are downloaded.
      name: # optional
      # Destination path. Supports basic tilde expansion. Defaults to $GITHUB_WORKSPACE
      path: # optional
      # A glob pattern matching the artifacts that should be downloaded. Ignored if name is specified.
      pattern: # optional
      # When multiple artifacts are matched, this changes the behavior of the destination directories. If true, the downloaded artifacts will be in the same directory specified by path. If false, the downloaded artifacts will be extracted into individual named directories within the specified path.
      merge-multiple: # optional, default is false
      # The GitHub token used to authenticate with the GitHub API. This is required when downloading artifacts from a different repository or from a different workflow run. If this is not specified, the action will attempt to download artifacts from the current repository and the current workflow run.
      github-token: # optional
      # The repository owner and the repository name joined together by "/". If github-token is specified, this is the repository that artifacts will be downloaded from.
      repository: # optional, default is ${{ github.repository }}
      # The id of the workflow run where the desired download artifact was uploaded from. If github-token is specified, this is the run that artifacts will be downloaded from.
      run-id: # optional, default is ${{ github.run_id }}


  - name: Codecov
    # You may pin to the exact commit or the version.
    # uses: codecov/codecov-action@c16abc29c95fcf9174b58eb7e1abf4c866893bc8
    uses: codecov/codecov-action@v4.1.1
    with:
      # Repository Codecov token. Used to authorize report uploads
      token: # optional
      # Specify the path to the Codecov YML
      codecov_yml_path: # optional
      # Override to specify the parent commit SHA
      commit_parent: # optional
      # Directory to search for coverage reports.
      directory: # optional
      # Disable file fixes to ignore common lines from coverage (e.g. blank lines or empty brackets)
      disable_file_fixes: # optional
      # Disable search for coverage files. This is helpful when specifying what files you want to upload with the --file option.
      disable_search: # optional
      # Disable setting safe directory. Set to true to disable.
      disable_safe_directory: # optional
      # Don't upload files to Codecov
      dry_run: # optional
      # Environment variables to tag the upload with (e.g. PYTHON | OS,PYTHON)
      env_vars: # optional
      # Folders to exclude from search
      exclude: # optional
      # Specify whether or not CI build should fail if Codecov runs into an error during upload
      fail_ci_if_error: # optional
      # Path to coverage file to upload
      file: # optional
      # Comma-separated list of files to upload
      files: # optional
      # Flag upload to group coverage metrics (e.g. unittests | integration | ui,chrome)
      flags: # optional
      # Override the git_service (e.g. github_enterprise)
      git_service: # optional
      # Raise no exceptions when no coverage reports found
      handle_no_reports_found: # optional
      # The job code
      job_code: # optional
      # User defined upload name. Visible in Codecov UI
      name: # optional
      # Override the assumed OS. Options are linux | macos | windows.
      os: # optional
      # Specify the branch name
      override_branch: # optional
      # Specify the build number
      override_build: # optional
      # The URL of the build where this is running
      override_build_url: # optional
      # Specify the commit SHA
      override_commit: # optional
      # Specify the pull request number
      override_pr: # optional
      # plugins to run. Options: xcode, gcov, pycoverage. The default behavior runs them all.
      plugin: # optional
      # Comma-separated list of plugins for use during upload.
      plugins: # optional
      # The code of the report. If unsure, do not include
      report_code: # optional
      # Used when not in git/hg project to identify project root directory
      root_dir: # optional
      # Specify the slug manually (Enterprise use)
      slug: # optional
      # Specify the base url to upload (Enterprise use)
      url: # optional
      # Use the legacy upload endpoint
      use_legacy_upload_endpoint: # optional
      # Specify whether the Codecov output should be verbose
      verbose: # optional
      # Specify which version of the Codecov CLI should be used. Defaults to `latest`
      version: # optional
      # Directory in which to execute codecov.sh
      working-directory: # optional
          
          
            - name: Create Release
  # You may pin to the exact commit or the version.
  # uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5
  uses: ncipollo/release-action@v1.14.0
  with:
    # An optional flag which indicates if we should update a release if it already exists. Defaults to false.
    allowUpdates: # optional, default is 
    # An optional flag which indicates if artifact read or upload errors should fail the build.
    artifactErrorsFailBuild: # optional, default is 
    # An optional set of paths representing artifacts to upload to the release. This may be a single path or a comma delimited list of paths (or globs)
    artifact: # optional, default is 
    # An optional set of paths representing artifacts to upload to the release. This may be a single path or a comma delimited list of paths (or globs)
    artifacts: # optional, default is 
    # The content type of the artifact. Defaults to raw
    artifactContentType: # optional, default is 
    # An optional body for the release.
    body: # optional, default is 
    # An optional body file for the release. This should be the path to the file
    bodyFile: # optional, default is 
    # An optional commit reference. This will be used to create the tag if it does not exist.
    commit: # optional, default is 
    # When provided this will generate a discussion of the specified category. The category must exist otherwise this will cause the action to fail. This isn't used with draft releases
    discussionCategory: # optional, default is 
    # Optionally marks this release as a draft release. Set to true to enable.
    draft: # optional, default is 
    # Indicates if release notes should be automatically generated.
    generateReleaseNotes: # optional, default is false
    # Indicates if the release should be the "latest" release or not.
    makeLatest: # optional, default is legacy
    # An optional name for the release. If this is omitted the tag will be used.
    name: # optional, default is 
    # Indicates if the release body should be omitted.
    omitBody: # optional, default is false
    # Indicates if the release body should be omitted during updates. The body will still be applied for newly created releases. This will preserve the existing body during updates.
    omitBodyDuringUpdate: # optional, default is false
    # Indicates if the draft flag should be omitted during updates. The draft flag will still be applied for newly created releases. This will preserve the existing draft state during updates.
    omitDraftDuringUpdate: # optional, default is false
    # Indicates if the release name should be omitted.
    omitName: # optional, default is false
    # Indicates if the release name should be omitted during updates. The name will still be applied for newly created releases. This will preserve the existing name during updates.
    omitNameDuringUpdate: # optional, default is false
    # Indicates if the prerelease flag should be omitted during updates. The prerelease flag will still be applied for newly created releases. This will preserve the existing prerelease state during updates.
    omitPrereleaseDuringUpdate: # optional, default is false
    # Optionally specify the owner of the repo where the release should be generated. Defaults to current repo's owner.
    owner: # optional, default is 
    # Optionally marks this release as prerelease. Set to true to enable.
    prerelease: # optional, default is 
    # Indicates if existing release artifacts should be removed, Defaults to false.
    removeArtifacts: # optional, default is false
    # Indicates if existing release artifacts should be replaced. Defaults to true.
    replacesArtifacts: # optional, default is true
    # Optionally specify the repo where the release should be generated. Defaults to current repo
    repo: # optional, default is 
    # When skipIfReleaseExists is enabled the action will be skipped if a non-draft release already exists for the provided tag.
    skipIfReleaseExists: # optional, default is false
    # An optional tag for the release. If this is omitted the git ref will be used (if it is a tag).
    tag: # optional, default is 
    # The Github token.
    token: # optional, default is ${{ github.token }}
    # When allowUpdates is enabled, this will fail the action if the release it is updating is not a draft or a prerelease.
    updateOnlyUnreleased: # optional, default is false
          
          
                      - name: Build and push Docker images
  # You may pin to the exact commit or the version.
  # uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0
  uses: docker/build-push-action@v5.3.0
  with:
    # List of a customs host-to-IP mapping (e.g., docker:10.180.0.1)
    add-hosts: # optional
    # List of extra privileged entitlement (e.g., network.host,security.insecure)
    allow: # optional
    # List of annotation to set to the image
    annotations: # optional
    # List of attestation parameters (e.g., type=sbom,generator=image)
    attests: # optional
    # List of build-time variables
    build-args: # optional
    # List of additional build contexts (e.g., name=path)
    build-contexts: # optional
    # Builder instance
    builder: # optional
    # List of external cache sources for buildx (e.g., user/app:cache, type=local,src=path/to/dir)
    cache-from: # optional
    # List of cache export destinations for buildx (e.g., user/app:cache, type=local,dest=path/to/dir)
    cache-to: # optional
    # Optional parent cgroup for the container used in the build
    cgroup-parent: # optional
    # Build's context is the set of files located in the specified PATH or URL
    context: # optional
    # Path to the Dockerfile
    file: # optional
    # List of metadata for an image
    labels: # optional
    # Load is a shorthand for --output=type=docker
    load: # optional, default is false
    # Set the networking mode for the RUN instructions during build
    network: # optional
    # Do not use cache when building the image
    no-cache: # optional, default is false
    # Do not cache specified stages
    no-cache-filters: # optional
    # List of output destinations (format: type=local,dest=path)
    outputs: # optional
    # List of target platforms for build
    platforms: # optional
    # Generate provenance attestation for the build (shorthand for --attest=type=provenance)
    provenance: # optional
    # Always attempt to pull all referenced images
    pull: # optional, default is false
    # Push is a shorthand for --output=type=registry
    push: # optional, default is false
    # Generate SBOM attestation for the build (shorthand for --attest=type=sbom)
    sbom: # optional
    # List of secrets to expose to the build (e.g., key=string, GIT_AUTH_TOKEN=mytoken)
    secrets: # optional
    # List of secret env vars to expose to the build (e.g., key=envname, MY_SECRET=MY_ENV_VAR)
    secret-envs: # optional
    # List of secret files to expose to the build (e.g., key=filename, MY_SECRET=./secret.txt)
    secret-files: # optional
    # Size of /dev/shm (e.g., 2g)
    shm-size: # optional
    # List of SSH agent socket or keys to expose to the build
    ssh: # optional
    # List of tags
    tags: # optional
    # Sets the target stage to build
    target: # optional
    # Ulimit options (e.g., nofile=1024:1024)
    ulimit: # optional
    # GitHub Token used to authenticate against a repository for Git context
    github-token: # optional, default is ${{ github.token }}



                      - name: Publish Docker
  # You may pin to the exact commit or the version.
  # uses: elgohr/Publish-Docker-Github-Action@eb53b3ec07136a6ebaed78d8135806da64f7c7e2
  uses: elgohr/Publish-Docker-Github-Action@v5
  with:
    # The name of the image you would like to push
    name: 
    # The login username for the registry
    username: 
    # The login password for the registry
    password: 
    # Use registry for pushing to a custom registry
    registry: # optional
    # Use snapshot to push an additional image
    snapshot: # optional
    # Set the default branch of your repository (default: master)
    default_branch: # optional
    # Use dockerfile when you would like to explicitly build a Dockerfile
    dockerfile: # optional
    # Use workdir when you would like to change the directory for building
    workdir: # optional
    # Use context when you would like to change the Docker build context.
    context: # optional
    # Use buildargs when you want to pass a list of environment variables as build-args
    buildargs: # optional
    # Use buildoptions when you want to configure options for building
    buildoptions: # optional
    # Use cache when you have big images, that you would only like to build partially
    cache: # optional
    # Use tags when you want to bring your own tags (separated by comma)
    tags: # optional
    # Use tag_names when you want to push tags/release by their git name
    tag_names: # optional
    # Push semver docker tags. e.g. image:1.2.3, image:1.2, image:1
    tag_semver: # optional
    # Set no_push to true if you want to prevent the action from pushing to a registry (default: false)
    no_push: # optional
    # Use platforms for building multi-arch images
    platforms: # optional


            - name: Blog Post Workflow
  # You may pin to the exact commit or the version.
  # uses: gautamkrishnar/blog-post-workflow@d0dc27adfd19a1a263429d39937888a9dfba2f5f
  uses: gautamkrishnar/blog-post-workflow@1.8.7
  with:
    # GitHub access token with Repo scope
    gh_token: # optional, default is ${{ github.token }}
    # Comma separated paths of the readme files you want to update
    readme_path: # optional, default is ./README.md
    # Maximum number of posts you want to show on your readme, all feeds combined
    max_post_count: # optional, default is 5
    # Comma separated list of RSS feed urls
    feed_list: # default is 
    # Disables the sorting of list based on publish date
    disable_sort: # optional, default is false
    # Comma separated list of platforms you want to enable the comment filter
    filter_comments: # optional, default is stackoverflow/Comment by $author/,stackexchange/Comment by $author/
    # Inserts newline before the closing tag and after the opening tag when using the template option, for formatting
    tag_post_pre_newline: # optional
    # Template to use while creating the list of posts. It can contain $title,$url, $newline and $date as variables
    template: # optional, default is default
    # Allows you to change the format of the date or time displayed when using the $date in the template option
    date_format: # optional, default is UTC:ddd mmm dd yyyy h:MM TT
    # Override the default comment tag name, if you want to show multiple instances of the action on the same repo
    comment_tag_name: # optional
    # Allows you to customize the user agent used by the RSS feed crawler
    user_agent: # optional, default is rss-parser
    # Allows you to customize the accept header of the http request
    accept_header: # optional, default is application/rss+xml
    # Allows you to use the custom tags from your feed items in your template
    custom_tags: # optional, default is 
    # Allows you to trim the title in the posts list
    title_max_length: # optional, default is 
    # Allows you to trim the description in the posts list
    description_max_length: # optional, default is 
    # Allows you to execute custom JavaScript code on each item to do advanced text manipulation
    item_exec: # optional, default is 
    # Commit message used while committing to the repo
    commit_message: # optional, default is Updated with the latest blog posts
    # Username used while committing to the repo
    committer_username: # optional, default is blog-post-bot
    # Email id used while committing to the repo
    committer_email: # optional, default is blog-post-bot@example.com
    # Prevent updating the readme, instead sets the output to the output variable named `results`
    output_only: # optional, default is false
    # Enables the feature that keeps the repo active by automatically committing to it even though there is no change
    enable_keepalive: # optional, default is true
    # Maximum number of times to retry the fetch operation if it fails
    retry_count: # optional, default is 0
    # Time to wait before each retry operation in seconds
    retry_wait_time: # optional, default is 1
    # Comma separated name of the feeds to show on template
    feed_names: # optional, default is 
    # Disables html encoding of the feed contents
    disable_html_encoding: # optional, default is false
    # Allows you to specify a template for the individual items in the category list
    categories_template: # optional, default is default
    # Disables the validation checks for Title, publish date and URL
    disable_item_validation: # optional, default is false
    # Enables date filters
    filter_dates: # optional, default is 
    # Provide your own seeding string for the randomness
    rand_seed: # optional, default is 
    # Allows you to remove duplicate blog posts from multiple sources
    remove_duplicates: # optional, default is 
    # Skips committing the changes to repo
    skip_commit: # optional, default is false
          
          
  - name: Super-Linter
    # You may pin to the exact commit or the version.
    # uses: super-linter/super-linter@a8150b40c89574adb5f68bf9502b890a236a06b3
    uses: super-linter/super-linter@v5.7.2


  - name: Release Drafter
    # You may pin to the exact commit or the version.
    # uses: release-drafter/release-drafter@3f0f87098bd6b5c5b9a36d49c41d998ea58f9348
    uses: release-drafter/release-drafter@v6.0.0
    with:
      # If your workflow requires multiple release-drafter configs it be helpful to override the config-name.
  The config should still be located inside `.github` as that's where we are looking for config files.

      config-name: # optional, default is release-drafter.yml
      # The name that will be used in the GitHub release that's created or updated.
  This will override any `name-template` specified in your `release-drafter.yml` if defined.

      name: # optional
      # The tag name to be associated with the GitHub release that's created or updated.
  This will override any `tag-template` specified in your `release-drafter.yml` if defined.

      tag: # optional
      # The version to be associated with the GitHub release that's created or updated.
  This will override any version calculated by the release-drafter.

      version: # optional
      # A boolean indicating whether the release being created or updated should be immediately published.

      publish: # optional, default is 
      # A string indicating whether the release being created or updated should be marked as latest.

      latest: # optional, default is 
      # A boolean indicating whether the release being created or updated is a prerelease.

      prerelease: # optional, default is 
      # A string indicating an identifier (alpha, beta, rc, etc), to increment the prerelease version.

      prerelease-identifier: # optional, default is 
      # The object that the release should be created to point to.

      commitish: # optional, default is 
      # A string that would be added before the template body.

      header: # optional, default is 
      # A string that would be added after the template body.

      footer: # optional, default is 
      # A boolean indicating whether the releaser mode is disabled.

      disable-releaser: # optional, default is 
      # A boolean indicating whether the autolabeler mode is disabled.

      disable-autolabeler: # optional, default is 




                      - name: GitHub Pages
  # You may pin to the exact commit or the version.
  # uses: crazy-max/ghaction-github-pages@c05ee637ec73429400a359430db8e5629f3f2564
  uses: crazy-max/ghaction-github-pages@v4.0.0
  with:
    # Git domain (default github.com)
    domain: # optional, default is github.com
    # GitHub repository where assets will be deployed (default $GITHUB_REPOSITORY)
    repo: # optional
    # Git branch where assets will be deployed
    target_branch: # optional, default is gh-pages
    # Create incremental commit instead of doing push force
    keep_history: # optional, default is false
    # Allow an empty commit to be created
    allow_empty_commit: # optional, default is true
    # Build directory to deploy
    build_dir: 
    # Whether to treat build_dir as an absolute path
    absolute_build_dir: # optional, default is false
    # If enabled, the content of symbolic links will be copied
    follow_symlinks: # optional, default is false
    # The committer name and email address
    committer: # optional
    # The author name and email address
    author: # optional
    # Commit message
    commit_message: # optional
    # Write the given domain name to the CNAME file
    fqdn: # optional
    # Allow Jekyll to build your site
    jekyll: # optional, default is true
    # If enabled, nothing will be pushed
    dry_run: # optional, default is false
    # Enable verbose output
    verbose: # optional, default is false


                      - name: Cypress.io
  # You may pin to the exact commit or the version.
  # uses: cypress-io/github-action@59810ebfa5a5ac6fcfdcfdf036d1cd4d083a88f2
  uses: cypress-io/github-action@v6.5.0
  with:
    # Sends test results to Cypress Cloud
    record: # optional
    # Overrides the global Cloud configuration to set the failed test threshold for auto cancellation or to disable auto cancellation when recording to the Cloud (requires Cypress 12.x or later)
    auto-cancel-after-failures: # optional
    # Set configuration values. Separate multiple values with a comma. The values set here override any values set in your configuration file.
    config: # optional
    # Path to the cypress config file where configuration values are set.
    config-file: # optional, default is 
    # Sets Cypress environment variables
    env: # optional
    # Name of the browser to use
    browser: # optional
    # Command that overrides cypress run
    command: # optional
    # Command for starting local server in the background
    start: # optional
    # A different start command on Windows
    start-windows: # optional
    # Command to run build step before starting tests
    build: # optional
    # Whether or not to run install
    install: # optional
    # Custom install command to use
    install-command: # optional
    # Whether or not to run tests
    runTests: # optional
    # Local server URL to wait for
    wait-on: # optional
    # Amount of time to wait for wait-on url to be available
    wait-on-timeout: # optional
    # Whether or not to load balance tests using multiple containers
    parallel: # optional
    # Group setting for tests
    group: # optional
    # Tag setting for tests
    tag: # optional
    # Working directory containing Cypress folder
    working-directory: # optional
    # Whether or not to use headed mode
    headed: # optional
    # Whether or not to publish job summary
    publish-summary: # optional, default is true
    # Provide a specific specs to run
    spec: # optional
    # Path of project to run
    project: # optional
    # You can prefix the default test command using the command-prefix option.
    command-prefix: # optional
    # ID associates multiple CI machines to one test run
    ci-build-id: # optional
    # Custom cache key
    cache-key: # optional
    # Whether or not to silence any Cypress specific output from stdout
    quiet: # optional
    # Lets the action know that Cypress is running component tests and not e2e tests
    component: # optional



                      - name: slack-send
  # You may pin to the exact commit or the version.
  # uses: slackapi/slack-github-action@6c661ce58804a1a20f6dc5fbee7f0381b469e001
  uses: slackapi/slack-github-action@v1.25.0
  with:
    # Slack channel ID where message will be posted. Needed if using bot token
    channel-id: # optional
    # Message to post into Slack. Needed if using bot token
    slack-message: # optional
    # JSON payload to send to Slack if webhook route. If not supplied, json from GitHub event will be sent instead
    payload: # optional
    # path to JSON payload to send to Slack if webhook route. If not supplied, json from GitHub event will be sent instead. If payload is provided, it will take preference over this field
    payload-file-path: # optional
    # The timestamp of a previous message posted. It will update the existing message instead of posting a new message
    update-ts: # optional




